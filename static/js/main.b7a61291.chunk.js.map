{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","modifiedData","map","dailydata","total","date","reportDate","fetchCountries","countries","name","Cards","className","Grid","container","spacing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Charts","console","log","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formcontrol","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","fetchedData","this","Chart","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7a61291.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__bJmZZ\",\"card\":\"Cards_card__2MFQq\",\"infected\":\"Cards_infected__2Mzv8\",\"recovered\":\"Cards_recovered__1QT9o\",\"deaths\":\"Cards_deaths__2C1kS\"};","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try { \r\n           const  {data : { confirmed , recovered , deaths , lastUpdate}} = await axios.get(changeableUrl);\r\n\r\n           return { confirmed , recovered , deaths , lastUpdate} ;\r\n\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const fetchDailyData = async (country) => {\r\n    \r\n\r\n\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailydata) => ({\r\n            confirmed:dailydata.confirmed.total,\r\n            deaths: dailydata.deaths.total,\r\n            date: dailydata.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n        \r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n\r\n        \r\n        return countries.map((country) => country.name);\r\n\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React from 'react';\r\nimport { Card , CardContent , Typography , Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data : {confirmed , recovered , deaths ,lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'Loading....'\r\n    }\r\n\r\n    \r\n    return(\r\n        <div className=\"{styles.container}\">\r\n        <Grid container spacing = {3} justify=\"center\">\r\n            <Grid item component={Card} xs={12} md={3} className= {cx(styles.card , styles.infected) }>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                    <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp\r\n                        start={0}\r\n                        end= {confirmed.value}\r\n                        duration={2.5}\r\n                        separator=\",\"\r\n                        \r\n                        />\r\n                         \r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    \r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className= {cx(styles.card , styles.recovered) }>\r\n                <CardContent>\r\n                    <Typography color=\"inherit\" gutterBottom>Recovered</Typography>\r\n                    <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp\r\n                        start={0}\r\n                        end= {recovered.value}\r\n                        duration={2.5}\r\n                        separator=\",\"\r\n                        \r\n                        />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    \r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className= {cx(styles.card , styles.deaths) }>\r\n                <CardContent>\r\n                    <Typography color=\"secondary\" gutterBottom>Deaths</Typography>\r\n                    <Typography variant=\"body2\">Number of Deaths caused by COVID-19</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp\r\n                        start={0}\r\n                        end= {deaths.value}\r\n                        duration={2.5}\r\n                        separator=\",\"\r\n                        \r\n                        /></Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    \r\n                </CardContent>\r\n            </Grid>\r\n        </Grid>\r\n        </div>\r\n    )\r\n} \r\n\r\n\r\nexport default Cards;","import React , {useState , useEffect} from 'react';\r\nimport { Line , Bar} from 'react-chartjs-2';\r\nimport {fetchDailyData} from '../../api';\r\nimport { StylesProvider } from '@material-ui/core';\r\nimport styles from './Chart.module.css';\r\n\r\n\r\n\r\n\r\nconst Charts = ({data:{ confirmed , recovered , deaths} , country}) => {\r\n\r\n    console.log(country);\r\n    const [dailyData ,setDailyData] = useState([]);\r\n\r\n\r\n useEffect(() => {\r\n     const fetchAPI = async () => {\r\n         setDailyData( await fetchDailyData());\r\n     }\r\n\r\n     fetchAPI();\r\n },[]);\r\n\r\n  const lineChart = (\r\n      dailyData.length \r\n      ? (\r\n        <Line\r\n        data={{\r\n           labels: dailyData.map(({date})=> date),\r\n           datasets: [{\r\n               data: dailyData.map(({confirmed}) => confirmed),\r\n               label: 'Infected',\r\n               borderColor: 'blue',\r\n               backgroundColor: 'rgba(0, 0, 255, 0.5)',\r\n               fill : true,\r\n           } , {\r\n            data: dailyData.map(({deaths}) => deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill : true,\r\n           }]   \r\n        }}\r\n      \r\n        />\r\n      ) : null\r\n\r\n  );\r\n\r\n  const barChart = (\r\n      confirmed\r\n      ? (\r\n          <Bar\r\n           data={{\r\n               labels: ['Infected' , 'Recovered' , 'Deaths'],\r\n               datasets: [{\r\n                   label: 'People',\r\n                   backgroundColor: [\r\n                    'rgba(0,0,255,0.5)',\r\n                    'rgba(0,255,0,0.5)',\r\n                    'rgba(255,0,0,0.5)'\r\n                   ],\r\n                   data : [confirmed.value , recovered.value , deaths.value]\r\n                   \r\n               }]\r\n\r\n\r\n           }}\r\n           options={{\r\n               legend: {display:false},\r\n               title:{display:true , text:`Current state in ${country}`},\r\n           }}\r\n          />\r\n      ) : null\r\n  )\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <br/>\r\n            {country ? barChart : lineChart}\r\n            \r\n        </div>\r\n    )\r\n} \r\n\r\n\r\nexport default Charts;","import React ,{useState , useEffect} from 'react';\r\nimport { NativeSelect , FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries , setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n\r\n        }\r\n        fetchAPI();\r\n    } , [setFetchedCountries]); \r\n    \r\n    return(\r\n        <FormControl className={styles.formcontrol}>\r\n            <NativeSelect defaultValue=\" \" onChange= {(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country , i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n} \r\n\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport {fetchData} from './api';\r\nimport styles from './App.module.css';\r\nimport {Cards , Chart ,CountryPicker} from './components';\r\n\r\nclass App extends React.Component {\r\n\r\n    state= {\r\n        data : {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data : fetchedData});\r\n\r\n  \r\n       \r\n\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        console.log(country);\r\n        this.setState({ country : country});\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data : fetchedData});\r\n\r\n    }\r\n    render () {\r\n        const { data , country } = this.state;\r\n            \r\n        return (\r\n            <div className={styles.container}>\r\n                <h1>C🦠vid-19</h1>\r\n                <hr/>\r\n                <Cards data = {data} />\r\n                <br/><br/>\r\n\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart  data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDom.render( <App /> , document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3WKx7\",\"image\":\"App_image__ZZUaz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3tTzG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3ZfsY\"};"],"sourceRoot":""}